{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9788d09c",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:03.468907Z",
     "iopub.status.busy": "2024-07-13T18:51:03.468483Z",
     "iopub.status.idle": "2024-07-13T18:51:04.457674Z",
     "shell.execute_reply": "2024-07-13T18:51:04.456484Z"
    },
    "papermill": {
     "duration": 1.000346,
     "end_time": "2024-07-13T18:51:04.460630",
     "exception": false,
     "start_time": "2024-07-13T18:51:03.460284",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/time-series-data-of-temp-sensor/temp_sensor_in_celesus.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "248cd0be",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:04.476005Z",
     "iopub.status.busy": "2024-07-13T18:51:04.475320Z",
     "iopub.status.idle": "2024-07-13T18:51:04.718709Z",
     "shell.execute_reply": "2024-07-13T18:51:04.717545Z"
    },
    "papermill": {
     "duration": 0.254039,
     "end_time": "2024-07-13T18:51:04.721563",
     "exception": false,
     "start_time": "2024-07-13T18:51:04.467524",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/kaggle/input/time-series-data-of-temp-sensor/temp_sensor_in_celesus.csv',)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "38c296de",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:04.736477Z",
     "iopub.status.busy": "2024-07-13T18:51:04.735364Z",
     "iopub.status.idle": "2024-07-13T18:51:04.751601Z",
     "shell.execute_reply": "2024-07-13T18:51:04.750615Z"
    },
    "papermill": {
     "duration": 0.02615,
     "end_time": "2024-07-13T18:51:04.753912",
     "exception": false,
     "start_time": "2024-07-13T18:51:04.727762",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0    2000-01-21 00:00:00\n",
       "Value                   29.849186\n",
       "Name: 480, dtype: object"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[20*24]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3c740c5d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:04.768741Z",
     "iopub.status.busy": "2024-07-13T18:51:04.767634Z",
     "iopub.status.idle": "2024-07-13T18:51:04.833785Z",
     "shell.execute_reply": "2024-07-13T18:51:04.832654Z"
    },
    "papermill": {
     "duration": 0.076187,
     "end_time": "2024-07-13T18:51:04.836354",
     "exception": false,
     "start_time": "2024-07-13T18:51:04.760167",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.index = pd.to_datetime(df['Unnamed: 0'], format='%Y-%m-%d %H:%M:%S')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c5e6481e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:04.850569Z",
     "iopub.status.busy": "2024-07-13T18:51:04.850167Z",
     "iopub.status.idle": "2024-07-13T18:51:04.868118Z",
     "shell.execute_reply": "2024-07-13T18:51:04.866915Z"
    },
    "papermill": {
     "duration": 0.027868,
     "end_time": "2024-07-13T18:51:04.870579",
     "exception": false,
     "start_time": "2024-07-13T18:51:04.842711",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2000-01-01 00:00:00</th>\n",
       "      <td>2000-01-01 00:00:00</td>\n",
       "      <td>29.151952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-01 01:00:00</th>\n",
       "      <td>2000-01-01 01:00:00</td>\n",
       "      <td>30.450879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-01 02:00:00</th>\n",
       "      <td>2000-01-01 02:00:00</td>\n",
       "      <td>29.508130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-01 03:00:00</th>\n",
       "      <td>2000-01-01 03:00:00</td>\n",
       "      <td>30.401492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-01 04:00:00</th>\n",
       "      <td>2000-01-01 04:00:00</td>\n",
       "      <td>30.966448</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              Unnamed: 0      Value\n",
       "Unnamed: 0                                         \n",
       "2000-01-01 00:00:00  2000-01-01 00:00:00  29.151952\n",
       "2000-01-01 01:00:00  2000-01-01 01:00:00  30.450879\n",
       "2000-01-01 02:00:00  2000-01-01 02:00:00  29.508130\n",
       "2000-01-01 03:00:00  2000-01-01 03:00:00  30.401492\n",
       "2000-01-01 04:00:00  2000-01-01 04:00:00  30.966448"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c73c0d84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:04.884758Z",
     "iopub.status.busy": "2024-07-13T18:51:04.884375Z",
     "iopub.status.idle": "2024-07-13T18:51:04.895101Z",
     "shell.execute_reply": "2024-07-13T18:51:04.893949Z"
    },
    "papermill": {
     "duration": 0.020705,
     "end_time": "2024-07-13T18:51:04.897620",
     "exception": false,
     "start_time": "2024-07-13T18:51:04.876915",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop('Unnamed: 0',axis='columns',inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "50212a5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:04.912280Z",
     "iopub.status.busy": "2024-07-13T18:51:04.911851Z",
     "iopub.status.idle": "2024-07-13T18:51:04.922981Z",
     "shell.execute_reply": "2024-07-13T18:51:04.921835Z"
    },
    "papermill": {
     "duration": 0.021499,
     "end_time": "2024-07-13T18:51:04.925606",
     "exception": false,
     "start_time": "2024-07-13T18:51:04.904107",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2000-01-01 00:00:00</th>\n",
       "      <td>29.151952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-01 01:00:00</th>\n",
       "      <td>30.450879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-01 02:00:00</th>\n",
       "      <td>29.508130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-01 03:00:00</th>\n",
       "      <td>30.401492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000-01-01 04:00:00</th>\n",
       "      <td>30.966448</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         Value\n",
       "Unnamed: 0                    \n",
       "2000-01-01 00:00:00  29.151952\n",
       "2000-01-01 01:00:00  30.450879\n",
       "2000-01-01 02:00:00  29.508130\n",
       "2000-01-01 03:00:00  30.401492\n",
       "2000-01-01 04:00:00  30.966448"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2a2ea3d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:04.940616Z",
     "iopub.status.busy": "2024-07-13T18:51:04.940199Z",
     "iopub.status.idle": "2024-07-13T18:51:04.947452Z",
     "shell.execute_reply": "2024-07-13T18:51:04.946136Z"
    },
    "papermill": {
     "duration": 0.017731,
     "end_time": "2024-07-13T18:51:04.949862",
     "exception": false,
     "start_time": "2024-07-13T18:51:04.932131",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def df_to_X_y(df, window_size=5):\n",
    "  df_as_np = df.to_numpy()\n",
    "  X = []\n",
    "  y = []\n",
    "  for i in range(len(df_as_np)-window_size):\n",
    "    row = [[a] for a in df_as_np[i:i+window_size]]\n",
    "    X.append(row)\n",
    "    label = df_as_np[i+window_size]\n",
    "    y.append(label)\n",
    "  return np.array(X), np.array(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fd3e5a2c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:04.964569Z",
     "iopub.status.busy": "2024-07-13T18:51:04.964155Z",
     "iopub.status.idle": "2024-07-13T18:51:08.953572Z",
     "shell.execute_reply": "2024-07-13T18:51:08.952440Z"
    },
    "papermill": {
     "duration": 3.999909,
     "end_time": "2024-07-13T18:51:08.956448",
     "exception": false,
     "start_time": "2024-07-13T18:51:04.956539",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((183615, 10, 1, 1), (183615, 1))"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WINDOW_SIZE = 10\n",
    "X1, y1 = df_to_X_y(df, WINDOW_SIZE)\n",
    "X1.shape, y1.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4bf15c69",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:08.973207Z",
     "iopub.status.busy": "2024-07-13T18:51:08.972854Z",
     "iopub.status.idle": "2024-07-13T18:51:10.353612Z",
     "shell.execute_reply": "2024-07-13T18:51:10.352022Z"
    },
    "papermill": {
     "duration": 1.392641,
     "end_time": "2024-07-13T18:51:10.356799",
     "exception": false,
     "start_time": "2024-07-13T18:51:08.964158",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f5143b29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:10.372586Z",
     "iopub.status.busy": "2024-07-13T18:51:10.372152Z",
     "iopub.status.idle": "2024-07-13T18:51:10.432960Z",
     "shell.execute_reply": "2024-07-13T18:51:10.431791Z"
    },
    "papermill": {
     "duration": 0.072236,
     "end_time": "2024-07-13T18:51:10.436057",
     "exception": false,
     "start_time": "2024-07-13T18:51:10.363821",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train_val, X_test1, y_train_val, y_test1 = train_test_split(X1, y1, test_size=0.4, random_state=42)\n",
    "\n",
    "# Step 2: Split the training+validation set into separate training and validation sets\n",
    "X_train1, X_val1, y_train1, y_val1 = train_test_split(X_train_val, y_train_val, test_size=0.25, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "75087ac5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:10.452112Z",
     "iopub.status.busy": "2024-07-13T18:51:10.451606Z",
     "iopub.status.idle": "2024-07-13T18:51:24.200549Z",
     "shell.execute_reply": "2024-07-13T18:51:24.199103Z"
    },
    "papermill": {
     "duration": 13.770099,
     "end_time": "2024-07-13T18:51:24.213073",
     "exception": false,
     "start_time": "2024-07-13T18:51:10.442974",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-07-13 18:51:12.631286: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2024-07-13 18:51:12.631453: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2024-07-13 18:51:12.789901: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"sequential\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ lstm (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │        <span style=\"color: #00af00; text-decoration-color: #00af00\">16,896</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">8</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">520</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">9</span> │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ lstm (\u001b[38;5;33mLSTM\u001b[0m)                     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │        \u001b[38;5;34m16,896\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m8\u001b[0m)              │           \u001b[38;5;34m520\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m9\u001b[0m │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">17,425</span> (68.07 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m17,425\u001b[0m (68.07 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">17,425</span> (68.07 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m17,425\u001b[0m (68.07 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import *\n",
    "from tensorflow.keras.callbacks import ModelCheckpoint\n",
    "from tensorflow.keras.losses import MeanSquaredError\n",
    "from tensorflow.keras.metrics import RootMeanSquaredError\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "\n",
    "model1 = Sequential()\n",
    "model1.add(InputLayer((5, 1)))\n",
    "model1.add(LSTM(64))\n",
    "model1.add(Dense(8, 'relu'))\n",
    "model1.add(Dense(1, 'linear'))\n",
    "\n",
    "model1.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a2124f65",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:24.231626Z",
     "iopub.status.busy": "2024-07-13T18:51:24.230959Z",
     "iopub.status.idle": "2024-07-13T18:51:24.252192Z",
     "shell.execute_reply": "2024-07-13T18:51:24.251002Z"
    },
    "papermill": {
     "duration": 0.03357,
     "end_time": "2024-07-13T18:51:24.254915",
     "exception": false,
     "start_time": "2024-07-13T18:51:24.221345",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "cp1 = ModelCheckpoint('model1.keras', save_best_only=True)\n",
    "model1.compile(loss=MeanSquaredError(), optimizer=Adam(learning_rate=0.0001), metrics=[RootMeanSquaredError()])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9532145f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:51:24.271952Z",
     "iopub.status.busy": "2024-07-13T18:51:24.271545Z",
     "iopub.status.idle": "2024-07-13T18:54:22.129754Z",
     "shell.execute_reply": "2024-07-13T18:54:22.128237Z"
    },
    "papermill": {
     "duration": 177.870145,
     "end_time": "2024-07-13T18:54:22.132674",
     "exception": false,
     "start_time": "2024-07-13T18:51:24.262529",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 7ms/step - loss: 583.2017 - root_mean_squared_error: 23.8369 - val_loss: 28.3450 - val_root_mean_squared_error: 5.3240\n",
      "Epoch 2/10\n",
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m18s\u001b[0m 7ms/step - loss: 17.4633 - root_mean_squared_error: 4.1630 - val_loss: 10.7234 - val_root_mean_squared_error: 3.2747\n",
      "Epoch 3/10\n",
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 7ms/step - loss: 5.3565 - root_mean_squared_error: 2.2696 - val_loss: 1.4564 - val_root_mean_squared_error: 1.2068\n",
      "Epoch 4/10\n",
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m18s\u001b[0m 7ms/step - loss: 1.3611 - root_mean_squared_error: 1.1665 - val_loss: 1.2337 - val_root_mean_squared_error: 1.1107\n",
      "Epoch 5/10\n",
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 7ms/step - loss: 1.2299 - root_mean_squared_error: 1.1090 - val_loss: 1.2154 - val_root_mean_squared_error: 1.1024\n",
      "Epoch 6/10\n",
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 7ms/step - loss: 1.2086 - root_mean_squared_error: 1.0994 - val_loss: 1.2678 - val_root_mean_squared_error: 1.1260\n",
      "Epoch 7/10\n",
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 7ms/step - loss: 1.2091 - root_mean_squared_error: 1.0995 - val_loss: 1.2090 - val_root_mean_squared_error: 1.0996\n",
      "Epoch 8/10\n",
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 7ms/step - loss: 1.1959 - root_mean_squared_error: 1.0936 - val_loss: 1.2051 - val_root_mean_squared_error: 1.0978\n",
      "Epoch 9/10\n",
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m18s\u001b[0m 7ms/step - loss: 1.1966 - root_mean_squared_error: 1.0939 - val_loss: 1.2273 - val_root_mean_squared_error: 1.1078\n",
      "Epoch 10/10\n",
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 7ms/step - loss: 1.1969 - root_mean_squared_error: 1.0940 - val_loss: 1.2827 - val_root_mean_squared_error: 1.1325\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.history.History at 0x7a457acee9e0>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model1.fit(X_train1, y_train1, validation_data=(X_val1, y_val1), epochs=10, callbacks=[cp1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d47d5af9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:54:22.536723Z",
     "iopub.status.busy": "2024-07-13T18:54:22.536289Z",
     "iopub.status.idle": "2024-07-13T18:54:22.657505Z",
     "shell.execute_reply": "2024-07-13T18:54:22.656195Z"
    },
    "papermill": {
     "duration": 0.324109,
     "end_time": "2024-07-13T18:54:22.660201",
     "exception": false,
     "start_time": "2024-07-13T18:54:22.336092",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tensorflow.keras.models import load_model\n",
    "model1 = load_model('model1.keras')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "85910ba9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:54:23.061916Z",
     "iopub.status.busy": "2024-07-13T18:54:23.061530Z",
     "iopub.status.idle": "2024-07-13T18:54:32.384577Z",
     "shell.execute_reply": "2024-07-13T18:54:32.383480Z"
    },
    "papermill": {
     "duration": 9.526551,
     "end_time": "2024-07-13T18:54:32.387456",
     "exception": false,
     "start_time": "2024-07-13T18:54:22.860905",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m2583/2583\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 3ms/step\n"
     ]
    }
   ],
   "source": [
    "train_predictions = model1.predict(X_train1).flatten()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "fe4de5a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:54:32.813026Z",
     "iopub.status.busy": "2024-07-13T18:54:32.812623Z",
     "iopub.status.idle": "2024-07-13T18:54:32.819862Z",
     "shell.execute_reply": "2024-07-13T18:54:32.818814Z"
    },
    "papermill": {
     "duration": 0.226008,
     "end_time": "2024-07-13T18:54:32.822227",
     "exception": false,
     "start_time": "2024-07-13T18:54:32.596219",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(82626,)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_predictions.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d88b1e31",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:54:33.246181Z",
     "iopub.status.busy": "2024-07-13T18:54:33.245790Z",
     "iopub.status.idle": "2024-07-13T18:54:33.250942Z",
     "shell.execute_reply": "2024-07-13T18:54:33.249768Z"
    },
    "papermill": {
     "duration": 0.216821,
     "end_time": "2024-07-13T18:54:33.253391",
     "exception": false,
     "start_time": "2024-07-13T18:54:33.036570",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_train1 = y_train1.flatten()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b274d1a4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:54:33.733772Z",
     "iopub.status.busy": "2024-07-13T18:54:33.733372Z",
     "iopub.status.idle": "2024-07-13T18:54:33.748942Z",
     "shell.execute_reply": "2024-07-13T18:54:33.747799Z"
    },
    "papermill": {
     "duration": 0.290888,
     "end_time": "2024-07-13T18:54:33.751597",
     "exception": false,
     "start_time": "2024-07-13T18:54:33.460709",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Train Predictions</th>\n",
       "      <th>Actuals</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>29.199656</td>\n",
       "      <td>27.467989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>27.785141</td>\n",
       "      <td>27.697371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>27.115305</td>\n",
       "      <td>25.505088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>32.163925</td>\n",
       "      <td>33.335379</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>30.026283</td>\n",
       "      <td>29.673176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82621</th>\n",
       "      <td>31.244999</td>\n",
       "      <td>30.226793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82622</th>\n",
       "      <td>33.813492</td>\n",
       "      <td>34.013789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82623</th>\n",
       "      <td>30.985016</td>\n",
       "      <td>31.524120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82624</th>\n",
       "      <td>24.373264</td>\n",
       "      <td>25.163617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82625</th>\n",
       "      <td>33.855949</td>\n",
       "      <td>33.554146</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>82626 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Train Predictions    Actuals\n",
       "0              29.199656  27.467989\n",
       "1              27.785141  27.697371\n",
       "2              27.115305  25.505088\n",
       "3              32.163925  33.335379\n",
       "4              30.026283  29.673176\n",
       "...                  ...        ...\n",
       "82621          31.244999  30.226793\n",
       "82622          33.813492  34.013789\n",
       "82623          30.985016  31.524120\n",
       "82624          24.373264  25.163617\n",
       "82625          33.855949  33.554146\n",
       "\n",
       "[82626 rows x 2 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_results = pd.DataFrame(data={'Train Predictions':train_predictions, 'Actuals':y_train1})\n",
    "train_results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ae608c6a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:54:34.169471Z",
     "iopub.status.busy": "2024-07-13T18:54:34.169042Z",
     "iopub.status.idle": "2024-07-13T18:54:34.473593Z",
     "shell.execute_reply": "2024-07-13T18:54:34.472481Z"
    },
    "papermill": {
     "duration": 0.514264,
     "end_time": "2024-07-13T18:54:34.475953",
     "exception": false,
     "start_time": "2024-07-13T18:54:33.961689",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7a4538744b50>]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.plot(train_results['Train Predictions'][50:100])\n",
    "plt.plot(train_results['Actuals'][50:100])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "bbb06e02",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:54:34.899511Z",
     "iopub.status.busy": "2024-07-13T18:54:34.898453Z",
     "iopub.status.idle": "2024-07-13T18:54:34.909201Z",
     "shell.execute_reply": "2024-07-13T18:54:34.907696Z"
    },
    "papermill": {
     "duration": 0.227478,
     "end_time": "2024-07-13T18:54:34.911777",
     "exception": false,
     "start_time": "2024-07-13T18:54:34.684299",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Root Mean Squared Error: 1.0919884397763298\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "rmse = np.sqrt(mean_squared_error(train_results['Actuals'], train_results['Train Predictions']))\n",
    "\n",
    "print(f\"Root Mean Squared Error: {rmse}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "9c681cc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:54:35.334944Z",
     "iopub.status.busy": "2024-07-13T18:54:35.334021Z",
     "iopub.status.idle": "2024-07-13T18:54:43.207010Z",
     "shell.execute_reply": "2024-07-13T18:54:43.205741Z"
    },
    "papermill": {
     "duration": 8.086831,
     "end_time": "2024-07-13T18:54:43.210349",
     "exception": false,
     "start_time": "2024-07-13T18:54:35.123518",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m2296/2296\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 3ms/step\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Train Predictions</th>\n",
       "      <th>Actuals</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>35.298107</td>\n",
       "      <td>34.361691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>33.683743</td>\n",
       "      <td>35.377035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>29.065611</td>\n",
       "      <td>27.971786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>25.373692</td>\n",
       "      <td>24.306771</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>25.572054</td>\n",
       "      <td>24.876859</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73441</th>\n",
       "      <td>33.844685</td>\n",
       "      <td>36.583330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73442</th>\n",
       "      <td>25.396542</td>\n",
       "      <td>25.354916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73443</th>\n",
       "      <td>27.761436</td>\n",
       "      <td>27.545101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73444</th>\n",
       "      <td>28.993345</td>\n",
       "      <td>29.597198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73445</th>\n",
       "      <td>29.956844</td>\n",
       "      <td>31.598121</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>73446 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Train Predictions    Actuals\n",
       "0              35.298107  34.361691\n",
       "1              33.683743  35.377035\n",
       "2              29.065611  27.971786\n",
       "3              25.373692  24.306771\n",
       "4              25.572054  24.876859\n",
       "...                  ...        ...\n",
       "73441          33.844685  36.583330\n",
       "73442          25.396542  25.354916\n",
       "73443          27.761436  27.545101\n",
       "73444          28.993345  29.597198\n",
       "73445          29.956844  31.598121\n",
       "\n",
       "[73446 rows x 2 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_predictions = model1.predict(X_test1).flatten()\n",
    "y_test1 = y_test1.flatten()\n",
    "train_results = pd.DataFrame(data={'Train Predictions':test_predictions, 'Actuals':y_test1})\n",
    "train_results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "820033cd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:54:43.656086Z",
     "iopub.status.busy": "2024-07-13T18:54:43.655679Z",
     "iopub.status.idle": "2024-07-13T18:54:43.906976Z",
     "shell.execute_reply": "2024-07-13T18:54:43.905759Z"
    },
    "papermill": {
     "duration": 0.474407,
     "end_time": "2024-07-13T18:54:43.909692",
     "exception": false,
     "start_time": "2024-07-13T18:54:43.435285",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7a4538694f70>]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.plot(train_results['Train Predictions'][50:100])\n",
    "plt.plot(train_results['Actuals'][50:100])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4eb3eabb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-13T18:54:44.424313Z",
     "iopub.status.busy": "2024-07-13T18:54:44.423934Z",
     "iopub.status.idle": "2024-07-13T18:54:44.432550Z",
     "shell.execute_reply": "2024-07-13T18:54:44.431218Z"
    },
    "papermill": {
     "duration": 0.298714,
     "end_time": "2024-07-13T18:54:44.434954",
     "exception": false,
     "start_time": "2024-07-13T18:54:44.136240",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Root Mean Squared Error: 1.0964555522505977\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "rmse = np.sqrt(mean_squared_error(train_results['Actuals'], train_results['Train Predictions']))\n",
    "\n",
    "print(f\"Root Mean Squared Error: {rmse}\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5379691,
     "sourceId": 8940753,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30746,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 225.888322,
   "end_time": "2024-07-13T18:54:46.381469",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-13T18:51:00.493147",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
